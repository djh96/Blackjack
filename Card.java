/*Daniel Hodgson
CS 0401
This code will represent playing Blackjack.
It will have features such as playing the game and storing info for each name 
*/
import java.util.Scanner; //Imports the scanner class
import java.io.*;         //Imports the input output wildcardpublic class Blackjack
import java.util.Random;	//Imports the Random class
public class Card
{
	private static Blackjack blackjack = new Blackjack();
	private static Scanner keyboard = new Scanner(System.in);	//Creates scanner object called keyboard
	private static String[] cards = {"2s", "3s", "4s", "5s", "6s", "7s", "8s", "9s", "Ts", "Js", "Qs", "Ks", "As", 
									"2c", "3c", "4c", "5c", "6c", "7c", "8c", "9c", "Tc", "Jc", "Qc", "Kc", "Ac",
									"2d", "3d", "4d", "5d", "6d", "7d", "8d", "9d", "Td", "Jd", "Qd", "Kd", "Ad",
									"2h", "3h", "4h", "5h", "6h", "7h", "8h", "9h", "Th", "Jh", "Qh", "Kh", "Ah"};
	private static int[] value = new int[52];
	private static Random random = new Random();	//Creates reference to generate random number
	private static int[] userHandValue = new int[22];	//Creates array to hold the value of user's cards
	private static String[] userHandCard = new String[22]; 		//Creates array to the cards of the user
	private static int[] dealerHandValue = new int[22];	//Creates array to hold the dealer's cards		
	private static String[] dealerHandCard = new String[22];		//Creates array to hold the dealer's cards
	private static int blackjackCounter = 0;
	private static int userScore = 0, dealerScore = 0;
	
	/**
		Constructor that hold initializes the array value to be even with the card array
	*/
	public int[] Card()
	{
		//For every index of the array, initialize the element to 0
		for(int i = 0; i < 52; i++)
		{
			value[i] = 0;
		}
		//For every index of the value array, set the element equal to the corresponding card's value
		for(int i = 0; i < 52; i++)
		{
			String str = cards[i];
			char str2 = str.charAt(0);
			switch(str2)
			{
					case '2':
						value[i] = 2;
						break;
					case '3':
						value[i] = 3;
						break;
					case '4':
						value[i] = 4;
						break;
					case '5':
						value[i] = 5;
						break;
					case '6':
						value[i] = 6;
						break;
					case '7':
						value[i] = 7;
						break;
					case '8':
						value[i] = 8;
						break;
					case '9':
						value[i] = 9;
						break;
					case 'T':
						value[i] = 10;
						break;
					case 'J':
						value[i] = 10;
						break;
					case 'Q':
						value[i] = 10;
						break;
					case 'K':
						value[i] = 10;
						break;
					case 'A':
						value[i] = 11;
						break;
			}
		}
		return value;
	}
	/**
		The get cards method returns the cards array
	*/
	public String[] getCards()
	{
		return cards;
	}
	/**
		The toString method returns the card name
		@param handCard to hold the cards and handValue to hold the values		
	*/
	public String toString(String[] handCard, int[] handValue)
	{
		String str = "";

		//Generate a random number between 0-51 and return the card
		int hand = random.nextInt(52);
		for(int i = 0; i < (hand + 1); i++)
		{
			handCard[0] = cards[i];
			handValue[0] = value[i];
			str = cards[i];
		}
		return str;	
	}
	/**
		The userHand method deals the user a hand and allows the user to continue to hit or stay	
	*/
	public static void userHand() throws IOException
	{
		int hand = 0;
		int counter = 2;
		int hasAce = 0;
		String str = "";
		String str2 = "";
		char s = ' ';
		//Generate a random number between 0-51
		hand = random.nextInt(52);

		//Until the for loop reaches the index of the hand generated by the random number, store the value of the corresponding card and value of the index
		for(int i = 0; i < (hand + 1); i++)
		{
			userHandCard[0] = cards[i];
			userHandValue[0] = value[i];
			str = cards[i];
			s = str.charAt(0);
		}	
		//If the card picked is an ace
		if(s == 'A')
		{
			hasAce += 1;
		}	
		//Generate a random number between 0-51
		hand = random.nextInt(52);

		//Until the for loop reaches the index of the hand generated by the random number, store the value of the corresponding card and value of the index
		for(int i = 0; i < (hand + 1); i++)
		{
			userHandCard[1] = cards[i];
			userHandValue[1] = value[i];
			str = cards[i];
			s = str.charAt(0);
		}	
		//If the card picked is an ace
		if(s == 'A')
		{
			hasAce += 1;
		}	
		//Determine the user score
		userScore = userHandValue[0] + userHandValue[1];

		//While the user busted and has an ace, decrease the user's score by ten
		while(hasAce > 0 && userScore > 21)
		{
			//For all the elements of the value array
			for(int i = 0; i <= counter; i++)
			{
				//If the element is an ace and the user score is over 21, decrease the value of the ace and the score by 10 and decrement the has ace counter
				if((userHandValue[i] == 11) && userScore > 21)
				{
					userScore -= 10;
					userHandValue[i] = 1;
					hasAce -= 1;
				}
			}
		}
		System.out.println("Current cards: " + userHandCard[0] + " " + userHandCard[1]);
		System.out.println("Current score: " + (userScore));

		str = "h";
		char letter = str.charAt(0);
		//While the user wants to hit
		while(letter == 'h' || letter == 'H')
		{
			//If the user had 21 points from only two cards (the third element of the array will still be 0)
			if(userScore == 21 && userHandValue[2] == 0)
			{
				blackjackCounter = 1;
			}
			System.out.print("[H]it or [S]tay:");
			str = keyboard.next();

			//While the user enters an invalid input
			while(!(str.equalsIgnoreCase("h") || str.equalsIgnoreCase("s") || str.equalsIgnoreCase("hit") || str.equalsIgnoreCase("stay")))
			{
				System.out.println("That is not a valid input.  Please enter a 'H' or 'S'");
				System.out.print("[H]it or [S]tay:");
				str = keyboard.next();
			}
			letter = str.charAt(0);

			//If the user wants to hit
			if(letter == 'h' || letter == 'H')
			{
				//Generate a random number between 0-51
				hand = random.nextInt(52);
				
				//Until the for loop reaches the index of the hand generated by the random number, store the value of the corresponding card and value of the index
				for(int i = 0; i < (hand + 1); i++)
				{
					userHandCard[counter] = cards[i];
					userHandValue[counter] = value[i];
					str2 = cards[i];
					s = str2.charAt(0);
				}
				//If the card picked is an ace
				if(s == 'A')
				{
					hasAce += 1;
				}
				userScore += userHandValue[counter];
			}

			//Else if the user wanted to stay, generate the dealer's hand
			else if(letter == 's' || letter == 'S')
			{
				dealerHand();
			}

			//If the user busted
			if(userScore > 21)
			{
				//If the user does not have an ace
				if(hasAce == 0)
				{
					System.out.println("Card dealt: " + userHandCard[counter]);
					System.out.println("Current score: " + userScore);
					blackjack.whoWon(userScore, 0, blackjackCounter);
				}
				//Else if the user does have an ace
				else
				{
					//While the user still has an ace left and the user score is still greater than 21
					while(hasAce > 0 && userScore > 21)
					{
						//For every index of the user hand array that has a value
						for(int i = 0; i <= counter; i++)
						{
							//If the element at that index is an ace, decrease it's value and the user score as well as the ace counter
							if(userHandValue[i] == 11)
							{
								userScore -= 10;
								userHandValue[i] = 1;
								hasAce -= 1;
							}
						}
					}
				}
			}
			System.out.println("Card dealt: " + userHandCard[counter]);
			System.out.println("Current score: " + userScore);
			//Increase the counter to determine what index the next card drawn will be stored in
			counter++;
		}
		dealerHand();
	}
	/**
		The dealerHand method will deal the user a hand and follow the rules of blackjack for when the dealer stays or hits	
	*/
	public static void dealerHand() throws IOException
	{
		int hand = 0;
		int counter = 2;
		int hasAce = 0;
		String str = "";
		String str2 = "";
		char s = ' ';
		hand = random.nextInt(52);
		//Generate a random number between 0-51
		hand = random.nextInt(52);

		//Until the for loop reaches the index of the hand generated by the random number, store the value of the corresponding card and value of the index
		for(int i = 0; i < (hand + 1); i++)
		{
			dealerHandCard[0] = cards[i];
			dealerHandValue[0] = value[i];
			str = cards[i];
			s = str.charAt(0);
		}	
		//If the card picked is an ace
		if(s == 'A')
		{
			hasAce += 1;
		}		
		hand = random.nextInt(52);
		//Generate a random number between 0-51
		hand = random.nextInt(52);

		//Until the for loop reaches the index of the hand generated by the random number, store the value of the corresponding card and value of the index
		for(int i = 0; i < (hand + 1); i++)
		{
			dealerHandCard[1] = cards[i];
			dealerHandValue[1] = value[i];
			str = cards[i];
			s = str.charAt(0);
		}	
		//If the card picked is an ace
		if(s == 'A')
		{
			hasAce += 1;
		}	
		dealerScore = dealerHandValue[0] + dealerHandValue[1];
		
		//While the dealer has an ace and the score is over 21, will only happen if dealt two aces
		while(hasAce > 0 && dealerScore > 21)
		{
			//For every element of the value array
			for(int i = 0; i <= counter; i++)
			{
				//If the dealer still has an ace and the score is greater than 21
				if((dealerHandValue[i] == 11) && dealerScore > 21)
				{
					dealerScore -= 10;
					dealerHandValue[i] = 1;
					hasAce -= 1;
				}
			}
		}
		System.out.println("Dealer current cards: " + dealerHandCard[0] + " " + dealerHandCard[1]);
		System.out.println("Dealer current score: " + (dealerScore));

		//If the dealer has more between (inclusive) 18 and 21 points, the dealer will stay
		if(dealerScore >= 18 && dealerScore <= 21)
		{
			System.out.println("The dealer stayed!");
			blackjack.whoWon(userScore, dealerScore, blackjackCounter);
		}
		//If the dealer has exactly 17 points
		else if(dealerScore == 17)
		{
			//If the dealer does not have an ace, the dealer will stay
			if(hasAce == 0)
			{
				System.out.println("The dealer stayed!");
				blackjack.whoWon(userScore, dealerScore, blackjackCounter);
			}
			//If the dealer does have an ace, the dealer will hit
		}
		str = "h";
		//While the dealer is obligated to hit
		while(str.equalsIgnoreCase("h"))
		{
			//If the dealer has more than 21 points, the dealer will lose
			if(dealerScore > 21)
			{
				blackjack.whoWon(userScore, dealerScore, blackjackCounter);
			}
			//Else if the dealer has between (inclusive) 18 and 21 points the dealer will stay
			else if(dealerScore >= 18 && dealerScore <= 21)
			{
				System.out.println("The dealer stayed!");
				blackjack.whoWon(userScore, dealerScore, blackjackCounter);
			}
			//Else if the dealer has exactly 17 points
			else if(dealerScore == 17)
			{
				//The dealer will stay if they don't have an ace
				if(hasAce == 0)
				{
					System.out.println("The dealer stayed!");
					blackjack.whoWon(userScore, dealerScore, blackjackCounter);
				}
				//The dealer will hit if they do have an ace
			}
			//If the dealer hits
			if(str.equalsIgnoreCase("h"))
			{
				System.out.println("The dealer hit!");
				//Generates a random number between 0-51
				hand = random.nextInt(52);
				//Until the for loop reaches the random number that was generated, set that card equal to the card at that index
				for(int i = 0; i < (hand + 1); i++)
				{
					dealerHandCard[counter] = cards[i];
					dealerHandValue[counter] = value[i];
					str2 = cards[i];
					s = str2.charAt(0);
				}
				//If the card picked is an ace
				if(s == 'A')
				{
					hasAce += 1;
				}
				dealerScore += dealerHandValue[counter];
				
			}
			//If the dealer busted
			if(dealerScore > 21)
			{
				//If the dealer doesn't have an ace, they lose
				if(hasAce == 0)
				{
					System.out.println("Dealer card dealt: " + dealerHandCard[counter]);

					blackjack.whoWon(userScore, dealerScore, blackjackCounter);
				}
				//Else if the dealer does have an ace
				else
				{
					//While the dealer's score is still over 21 and they have an ace
					while(hasAce > 0 && dealerScore > 21)
					{
						//For every card that the dealer has been dealt
						for(int i = 0; i <= counter; i++)
						{
							//If the card is an ace and the dealer score is over 21, decrease the card's value and the score by 10, and decrement the hasAce counter
							if((dealerHandValue[i] == 11) && dealerScore > 21)
							{
								dealerScore -= 10;
								dealerHandValue[i] = 1;
								hasAce -= 1;
							}
						}
					}
				}
			}

			System.out.println("Dealer card dealt: " + dealerHandCard[counter]);
			System.out.println("Dealer current score: " + dealerScore);
			//Increase the counter to determine what index the next card drawn will be stored in
			counter++;
		}
	}
	/**
		Method to reset the user's and dealer's hands	
	*/
	public void reset()
	{
		//For every card in the user's and dealer's hand, reset the value to 0
		for(int i = 0; i < 22; i++) 
		{
			userHandValue[i] = 0;
			dealerHandValue[i] = 0;
		}
		//Reset the blackjack counter to 0
		blackjackCounter = 0;
	}
}